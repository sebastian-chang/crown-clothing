{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist'; // This is for local storage\n\nimport storage from 'redux-persist/lib/storage'; // This is for session storage\n// import sessionStorage from 'redux-persist/lib/storage'\n\nimport userReducer from './user/user-reducer';\nimport cartReducer from './cart/cart-reducer';\nimport directoryReducer from './directory/directory-reducer';\nimport shopReducer from './shop/shop-reducer';\nconst persistConfig = {\n  // Where in our reducers do we want to start storing\n  key: 'root',\n  // Storage as the key and the storage where were saving\n  storage,\n  // List the reducers we would like to store to local storage by key name\n  whitelist: ['cart']\n}; // Combine all reducers\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  cart: cartReducer,\n  directory: directoryReducer,\n  shop: shopReducer\n}); // Modified version of our rootReducer now with persisting capabilities\n\nexport default persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/redux/root-reducer.js"],"names":["combineReducers","persistReducer","storage","userReducer","cartReducer","directoryReducer","shopReducer","persistConfig","key","whitelist","rootReducer","user","cart","directory","shop"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B,C,CACA;;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;AACA;;AAEA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,aAAa,GAAG;AAClB;AACAC,EAAAA,GAAG,EAAE,MAFa;AAGlB;AACAN,EAAAA,OAJkB;AAKlB;AACAO,EAAAA,SAAS,EAAE,CAAC,MAAD;AANO,CAAtB,C,CASA;;AACA,MAAMC,WAAW,GAAGV,eAAe,CAAC;AAChCW,EAAAA,IAAI,EAAER,WAD0B;AAEhCS,EAAAA,IAAI,EAAER,WAF0B;AAGhCS,EAAAA,SAAS,EAAER,gBAHqB;AAIhCS,EAAAA,IAAI,EAAER;AAJ0B,CAAD,CAAnC,C,CAOA;;AACA,eAAeL,cAAc,CAACM,aAAD,EAAgBG,WAAhB,CAA7B","sourcesContent":["import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\n// This is for local storage\nimport storage from 'redux-persist/lib/storage'\n// This is for session storage\n// import sessionStorage from 'redux-persist/lib/storage'\n\nimport userReducer from './user/user-reducer'\nimport cartReducer from './cart/cart-reducer'\nimport directoryReducer from './directory/directory-reducer'\nimport shopReducer from './shop/shop-reducer'\n\nconst persistConfig = {\n    // Where in our reducers do we want to start storing\n    key: 'root',\n    // Storage as the key and the storage where were saving\n    storage,\n    // List the reducers we would like to store to local storage by key name\n    whitelist: ['cart']\n}\n\n// Combine all reducers\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer,\n})\n\n// Modified version of our rootReducer now with persisting capabilities\nexport default persistReducer(persistConfig, rootReducer)\n"]},"metadata":{},"sourceType":"module"}