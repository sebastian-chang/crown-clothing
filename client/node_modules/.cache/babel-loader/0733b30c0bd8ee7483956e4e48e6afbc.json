{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop-actions';\nimport ShopActionTypes from './shop-types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired from Async saga');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get(); // call takes a fucntion and arguements you would pass into said function\n\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // put is similar to dispatch method\n\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionsMap));\n  }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/redux/shop/shop-sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","then","dispatch","catch","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN;;AAEA,MAAG;AACD,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAFC,CAGD;;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC,CAJC,CAKD;;AACA,UAAMX,GAAG,CAACG,sBAAsB,CAACU,cAAD,CAAvB,CAAT;AACD,GAPD,CAQA,OAAOC,KAAP,EAAc;AACZ,UAAMd,GAAG,CAACI,sBAAsB,CAACU,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;;AAGDN,EAAAA,aAAa,CAACG,GAAd,GACGI,IADH,CACQL,QAAQ,IAAI;AAChB,UAAME,cAAc,GAAGX,+BAA+B,CAACS,QAAD,CAAtD;AACAM,IAAAA,QAAQ,CAACd,sBAAsB,CAACU,cAAD,CAAvB,CAAR;AACD,GAJH,EAKGK,KALH,CAKSJ,KAAK,IAAIG,QAAQ,CAACb,sBAAsB,CAACU,KAAK,CAACC,OAAP,CAAvB,CAL1B;AAOD;AAED,OAAO,UAAUI,qBAAV,GAAmC;AACxC,QAAMrB,SAAS,CACbO,eAAe,CAACe,uBADH,EAEbd,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop-actions'\nimport ShopActionTypes from './shop-types'\n\nexport function* fetchCollectionsAsync () {\n  yield console.log('I am fired from Async saga')\n\n  try{\n    const collectionRef = firestore.collection('collections')\n    const snapshot = yield collectionRef.get()\n    // call takes a fucntion and arguements you would pass into said function\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n    // put is similar to dispatch method\n    yield put(fetchCollectionSuccess(collectionsMap))\n  }\n  catch (error) {\n    yield put(fetchCollectionFailure(error.message))\n  }\n\n\n  collectionRef.get()\n    .then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n      dispatch(fetchCollectionSuccess(collectionsMap))\n    })\n    .catch(error => dispatch(fetchCollectionFailure(error.message)))\n\n}\n\nexport function* fetchCollectionsStart () {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync,\n  )\n}\n"]},"metadata":{},"sourceType":"module"}