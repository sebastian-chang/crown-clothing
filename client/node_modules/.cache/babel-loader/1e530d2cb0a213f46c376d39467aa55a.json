{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop-actions';\nimport ShopActionTypes from './shop-types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired from Async saga');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get(); // call takes a fucntion and arguements you would pass into said function\n\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot); // put is similar to dispatch method\n\n    yield put(fetchCollectionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/client/src/redux/shop/shop-sagas.js"],"names":["all","call","put","takeLatest","firestore","convertCollectionsSnapshotToMap","fetchCollectionSuccess","fetchCollectionFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,oBAA3C;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAmC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB,CAFE,CAGF;;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC,CAJE,CAKF;;AACA,UAAMZ,GAAG,CAACI,sBAAsB,CAACU,cAAD,CAAvB,CAAT;AACD,GAPD,CAQA,OAAOC,KAAP,EAAc;AACZ,UAAMf,GAAG,CAACK,sBAAsB,CAACU,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAmC;AACxC,QAAMhB,UAAU,CACdK,eAAe,CAACY,uBADF,EAEdX,qBAFc,CAAhB;AAID;AAED,OAAO,UAAUY,SAAV,GAAuB;AAC5B,QAAMrB,GAAG,CAAC,CAACC,IAAI,CACbkB,qBADa,CAAL,CAAD,CAAT;AAGD","sourcesContent":["import { all, call, put, takeLatest } from 'redux-saga/effects'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop-actions'\nimport ShopActionTypes from './shop-types'\n\nexport function* fetchCollectionsAsync () {\n  yield console.log('I am fired from Async saga')\n\n  try {\n    const collectionRef = firestore.collection('collections')\n    const snapshot = yield collectionRef.get()\n    // call takes a fucntion and arguements you would pass into said function\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\n    // put is similar to dispatch method\n    yield put(fetchCollectionSuccess(collectionsMap))\n  }\n  catch (error) {\n    yield put(fetchCollectionFailure(error.message))\n  }\n}\n\nexport function* fetchCollectionsStart () {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync,\n  )\n}\n\nexport function* shopSagas () {\n  yield all([call(\n    fetchCollectionsStart,\n  )])\n}\n"]},"metadata":{},"sourceType":"module"}