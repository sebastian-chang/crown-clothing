{"ast":null,"code":"var _jsxFileName = \"/Users/schang/Documents/Learning/React Developer/crown-clothing/src/components/cart-icon/cart-icon.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './cart-icon.styles.scss';\nimport { ReactComponent as ShoppingIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assests/shopping-bag.svg\";\nimport { toggleCartHidden } from '../../redux/cart/cart-actions';\nimport { useEffect } from 'react';\n\nconst CartIcon = () => {\n  const dispatch = useDispatch();\n  const itemCount = useSelector(state => state.cart.cartItems.reduce((accumlatedQuantity, cartItem) => accumlatedQuantity + cartItem.quantity, 0));\n\n  const toggleCart = () => dispatch(toggleCartHidden());\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-icon\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShoppingIcon, {\n    className: \"shopping-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"item-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, itemCount));\n};\n\nconst mapStateToProps = ({\n  cart: {\n    cartItems\n  }\n}) => ({\n  itemCount: cartItems.reduce((accumlatedQuantity, cartItem) => accumlatedQuantity + cartItem.quantity, 0)\n}); // const mapDispatchToProps = dispatch => ({\n//   toggleCartHidden: () => dispatch(toggleCartHidden())\n// })\n// export default connect(null, mapDispatchToProps)(CartIcon)\n\n\nexport default CartIcon;","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/components/cart-icon/cart-icon.jsx"],"names":["React","useDispatch","useSelector","toggleCartHidden","useEffect","CartIcon","dispatch","itemCount","state","cart","cartItems","reduce","accumlatedQuantity","cartItem","quantity","toggleCart","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,yBAAP;;AAEA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,SAAS,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,SAAX,CAAqBC,MAArB,CAA4B,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAAQ,CAACC,QAA5F,EAAsG,CAAtG,CAAV,CAA7B;;AAEA,QAAMC,UAAU,GAAG,MAAMT,QAAQ,CAACH,gBAAgB,EAAjB,CAAjC;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,OAAO,EAAEY,UAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEF;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BR,SAA9B,CAFE,CADF;AAMD,CAZD;;AAcA,MAAMS,eAAe,GAAG,CAAC;AAAEP,EAAAA,IAAI,EAAC;AAACC,IAAAA;AAAD;AAAP,CAAD,MAA0B;AAChDH,EAAAA,SAAS,EAAEG,SAAS,CAACC,MAAV,CAAiB,CAACC,kBAAD,EAAqBC,QAArB,KAAkCD,kBAAkB,GAAGC,QAAQ,CAACC,QAAjF,EAA2F,CAA3F;AADqC,CAA1B,CAAxB,C,CAKA;AACA;AACA;AAEA;;;AAEA,eAAeT,QAAf","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport './cart-icon.styles.scss'\nimport { ReactComponent as ShoppingIcon } from '../../assests/shopping-bag.svg'\nimport { toggleCartHidden } from '../../redux/cart/cart-actions'\nimport { useEffect } from 'react'\n\nconst CartIcon = () => {\n  const dispatch = useDispatch()\n  const itemCount = useSelector(state => state.cart.cartItems.reduce((accumlatedQuantity, cartItem) => accumlatedQuantity + cartItem.quantity, 0))\n\n  const toggleCart = () => dispatch(toggleCartHidden())\n\n  return (\n    <div className='cart-icon' onClick={toggleCart}>\n      <ShoppingIcon className='shopping-icon' />\n  <span className='item-count'>{itemCount}</span>\n    </div>\n  )\n}\n\nconst mapStateToProps = ({ cart:{cartItems}}) => ({\n  itemCount: cartItems.reduce((accumlatedQuantity, cartItem) => accumlatedQuantity + cartItem.quantity, 0\n  )\n})\n\n// const mapDispatchToProps = dispatch => ({\n//   toggleCartHidden: () => dispatch(toggleCartHidden())\n// })\n\n// export default connect(null, mapDispatchToProps)(CartIcon)\n\nexport default CartIcon\n"]},"metadata":{},"sourceType":"module"}