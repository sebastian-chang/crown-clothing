{"ast":null,"code":"var _jsxFileName = \"/Users/schang/Documents/Learning/React Developer/crown-clothing/src/components/pages/shop/shop.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../../firebase/firebase.utils';\nimport { fetchCollectionsStartAsync, updateCollection } from '../../../redux/shop/shop-actions';\nimport CollectionsOverview from '../../collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../with-spinner/with-spinner'; // Wrapping our collectionos components with our higher order spinner component\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match\n}) => {\n  const unsubscribeFromSnapshot = null;\n  const [loading, setLoading] = useState(true);\n  const isFetching = useSelector(state => state.shop.isFetching);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Moved to shop reducer using Redux Thunk\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(updateCollection(collectionsMap));\n      setLoading(false);\n    });\n    return function cleanup() {\n      dispatch(updateCollection(unsubscribeFromSnapshot));\n    }; // dispatch(fetchCollectionsStartAsync())\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, console.log('this is fetching ', isFetching), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 68\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n      isLoading: loading\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 76\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/components/pages/shop/shop.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Route","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStartAsync","updateCollection","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","match","unsubscribeFromSnapshot","loading","setLoading","isFetching","state","shop","dispatch","collectionRef","collection","onSnapshot","snapshot","collectionsMap","cleanup","console","log","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,kCAA3D;AACA,SAASC,0BAAT,EAAqCC,gBAArC,QAA6D,kCAA7D;AAEA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CAEA;;AACA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,0BAA0B,GAAGF,WAAW,CAACD,cAAD,CAA9C;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC5B,QAAMC,uBAAuB,GAAG,IAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMmB,UAAU,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,UAArB,CAA9B;AACA,QAAMG,QAAQ,GAAGpB,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMsB,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGrB,+BAA+B,CAACoB,QAAD,CAAtD;AACAJ,MAAAA,QAAQ,CAACd,gBAAgB,CAACmB,cAAD,CAAjB,CAAR;AACAT,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD;AAKA,WAAO,SAASU,OAAT,GAAoB;AACvBN,MAAAA,QAAQ,CAACd,gBAAgB,CAACQ,uBAAD,CAAjB,CAAR;AACH,KAFD,CATY,CAYZ;AACH,GAbQ,EAaN,CAACM,QAAD,CAbM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKO,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCX,UAAjC,CADL,eAEI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEJ,KAAK,CAACgB,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAEf;AAA3C,OAAyDe,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEjB,KAAK,CAACgB,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,MAAA,SAAS,EAAEf;AAAvC,OAAoDe,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CA3BD;;AA6BA,eAAelB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route } from 'react-router-dom'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../../firebase/firebase.utils'\nimport { fetchCollectionsStartAsync, updateCollection } from '../../../redux/shop/shop-actions'\n\nimport CollectionsOverview from '../../collections-overview/collections-overview'\nimport CollectionPage from '../collection/collection'\nimport WithSpinner from '../../with-spinner/with-spinner'\n\n// Wrapping our collectionos components with our higher order spinner component\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\n\nconst ShopPage = ({ match }) => {\n    const unsubscribeFromSnapshot = null\n    const [loading, setLoading] = useState(true)\n    const isFetching = useSelector(state => state.shop.isFetching)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        // Moved to shop reducer using Redux Thunk\n        const collectionRef = firestore.collection('collections')\n\n        collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n            dispatch(updateCollection(collectionsMap))\n            setLoading(false)\n        })\n        return function cleanup () {\n            dispatch(updateCollection(unsubscribeFromSnapshot))\n        }\n        // dispatch(fetchCollectionsStartAsync())\n    }, [dispatch])\n    return (\n        <div className='shop-page'>\n            {console.log('this is fetching ', isFetching)}\n            <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading}  {...props} />} />\n            <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionsPageWithSpinner isLoading={loading} {...props} />} />\n        </div>\n    )\n}\n\nexport default ShopPage\n"]},"metadata":{},"sourceType":"module"}