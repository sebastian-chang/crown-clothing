{"ast":null,"code":"var _jsxFileName = \"/Users/schang/Documents/Learning/React Developer/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx\";\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport './cart-dropdown.styles.scss';\nimport CustomButton from '../custom-button/custom-button';\nimport CartItem from '../cart-item/cart-item';\nimport { selectCartItems } from '../../redux/cart/cart-selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart-actions';\n\nconst CartDropdown = props => {\n  const cartItems = useSelector(state => selectCartItems(state));\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n    key: cartItem.id,\n    item: cartItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(\"span\", {\n    className: \"empty-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 15\n    }\n  }, \"Your cart is empty\")), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => {\n      props.history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"GO TO CHECKOUT\"));\n};\n\nexport default withRouter(CartDropdown);","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/client/src/components/cart-dropdown/cart-dropdown.jsx"],"names":["React","useDispatch","useSelector","withRouter","CustomButton","CartItem","selectCartItems","toggleCartHidden","CartDropdown","props","cartItems","state","dispatch","length","map","cartItem","id","history","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAO,6BAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAMC,SAAS,GAAGR,WAAW,CAACS,KAAK,IAAIL,eAAe,CAACK,KAAD,CAAzB,CAA7B;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIS,SAAS,CAACG,MAAV,GACEH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBACpB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,IAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,gBAKI;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPR,CADF,eAYE,oBAAC,YAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmB,WAAnB;AACAN,MAAAA,QAAQ,CAACL,gBAAgB,EAAjB,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZF,CADF;AAuBD,CA1BD;;AA4BA,eAAeJ,UAAU,CAACK,YAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\n\nimport './cart-dropdown.styles.scss'\nimport CustomButton from '../custom-button/custom-button'\nimport CartItem from '../cart-item/cart-item'\nimport { selectCartItems } from '../../redux/cart/cart-selectors'\nimport { toggleCartHidden } from '../../redux/cart/cart-actions'\n\nconst CartDropdown = (props) => {\n  const cartItems = useSelector(state => selectCartItems(state))\n  const dispatch = useDispatch()\n  return (\n    <div className='cart-dropdown' >\n      <div className='cart-items'>\n        {\n          cartItems.length ? (\n            cartItems.map(cartItem => (\n              <CartItem key={cartItem.id} item={cartItem} />\n            ))\n          ) : (\n              <span className='empty-message'>Your cart is empty</span>\n            )\n        }\n      </div>\n      <CustomButton\n        onClick={() => {\n          props.history.push('/checkout')\n          dispatch(toggleCartHidden())\n        }}\n      >\n        GO TO CHECKOUT\n      </CustomButton>\n    </div>\n  )\n}\n\nexport default withRouter(CartDropdown)\n"]},"metadata":{},"sourceType":"module"}