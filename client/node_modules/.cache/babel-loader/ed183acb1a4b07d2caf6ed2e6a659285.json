{"ast":null,"code":"import ShopActionTypes from './shop-types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/redux/shop/shop-actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAGC,cAAc,KAAK;AACvDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,wBADiC;AAEvDC,EAAAA,OAAO,EAAEF;AAF8C,CAAL,CAA7C;AAKP,OAAO,MAAMG,sBAAsB,GAAGC,YAAY,KAAK;AACrDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,wBAD+B;AAErDH,EAAAA,OAAO,EAAEE;AAF4C,CAAL,CAA3C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GACGC,IADH,CACQC,QAAQ,IAAI;AAChB,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,sBAAsB,CAACC,cAAD,CAAvB,CAAR;AACD,KAJH,EAKGa,KALH,CAKSC,KAAK,IAAIP,QAAQ,CAACJ,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAL1B;AAMD,GAVD;AAWD,CAZM","sourcesContent":["import ShopActionTypes from './shop-types'\n\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\n\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n})\n\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap,\n})\n\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage,\n})\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections')\n    dispatch(fetchCollectionStart())\n\n    collectionRef.get()\n      .then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        dispatch(fetchCollectionSuccess(collectionsMap))\n      })\n      .catch(error => dispatch(fetchCollectionFailure(error.message)))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}