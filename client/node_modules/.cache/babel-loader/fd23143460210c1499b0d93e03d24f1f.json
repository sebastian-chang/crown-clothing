{"ast":null,"code":"var _jsxFileName = \"/Users/schang/Documents/Learning/React Developer/crown-clothing/src/components/pages/shop/shop.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route } from 'react-router-dom'; // import { firestore, convertCollectionsSnapshotToMap } from '../../../firebase/firebase.utils'\n\nimport { fetchCollectionsStartAsync } from '../../../redux/shop/shop-actions';\nimport CollectionsOverview from '../../collections-overview/collections-overview';\nimport CollectionPage from '../collection/collection';\nimport WithSpinner from '../../with-spinner/with-spinner'; // Wrapping our collectionos components with our higher order spinner component\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  match\n}) => {\n  const unsubscribeFromSnapshot = null; // const [loading, setLoading] = useState(true)\n\n  const isFetching = useSelector(state => state.shop.isFetching);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // Moved to shop reducer using Redux Thunk\n    // const collectionRef = firestore.collection('collections')\n    // collectionRef.onSnapshot(async snapshot => {\n    //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //     dispatch(updateCollection(collectionsMap))\n    //     setLoading(false)\n    // })\n    // return function cleanup() {\n    //     dispatch(updateCollection(unsubscribeFromSnapshot))\n    // }\n    dispatch(fetchCollectionsStartAsync());\n    console.log('this is is fetching ', isFetching);\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shop-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.path}`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n      isLoading: !isFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 68\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.path}/:collectionId`,\n    render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n      isLoading: !isFetching\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 76\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ShopPage;","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/components/pages/shop/shop.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Route","fetchCollectionsStartAsync","CollectionsOverview","CollectionPage","WithSpinner","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","match","unsubscribeFromSnapshot","isFetching","state","shop","dispatch","console","log","path","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,kCAA3C;AAEA,OAAOC,mBAAP,MAAgC,iDAAhC;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB,C,CAEA;;AACA,MAAMC,8BAA8B,GAAGD,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMI,0BAA0B,GAAGF,WAAW,CAACD,cAAD,CAA9C;;AAEA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC5B,QAAMC,uBAAuB,GAAG,IAAhC,CAD4B,CAE5B;;AACA,QAAMC,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,UAArB,CAA9B;AACA,QAAMG,QAAQ,GAAGf,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAgB,IAAAA,QAAQ,CAACZ,0BAA0B,EAA3B,CAAR;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,UAApC;AACH,GAdQ,EAcN,CAACG,QAAD,CAdM,CAAT;AAeA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEL,KAAK,CAACQ,IAAK,EAAjC;AAAoC,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,MAAA,SAAS,EAAE,CAACP;AAA5C,OAA6DO,KAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAET,KAAK,CAACQ,IAAK,gBAA3B;AAA4C,IAAA,MAAM,EAAGC,KAAD,iBAAW,oBAAC,0BAAD;AAA4B,MAAA,SAAS,EAAE,CAACP;AAAxC,OAAwDO,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH,CA3BD;;AA6BA,eAAeV,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Route } from 'react-router-dom'\n\n// import { firestore, convertCollectionsSnapshotToMap } from '../../../firebase/firebase.utils'\nimport { fetchCollectionsStartAsync } from '../../../redux/shop/shop-actions'\n\nimport CollectionsOverview from '../../collections-overview/collections-overview'\nimport CollectionPage from '../collection/collection'\nimport WithSpinner from '../../with-spinner/with-spinner'\n\n// Wrapping our collectionos components with our higher order spinner component\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview)\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\n\nconst ShopPage = ({ match }) => {\n    const unsubscribeFromSnapshot = null\n    // const [loading, setLoading] = useState(true)\n    const isFetching = useSelector(state => state.shop.isFetching)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        // Moved to shop reducer using Redux Thunk\n        // const collectionRef = firestore.collection('collections')\n\n        // collectionRef.onSnapshot(async snapshot => {\n        //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n        //     dispatch(updateCollection(collectionsMap))\n        //     setLoading(false)\n        // })\n        // return function cleanup() {\n        //     dispatch(updateCollection(unsubscribeFromSnapshot))\n        // }\n        dispatch(fetchCollectionsStartAsync())\n        console.log('this is is fetching ', isFetching)\n    }, [dispatch])\n    return (\n        <div className='shop-page'>\n            <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={!isFetching}  {...props}/>} />\n            <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionsPageWithSpinner isLoading={!isFetching} {...props} />} />\n        </div>\n    )\n}\n\nexport default ShopPage\n"]},"metadata":{},"sourceType":"module"}