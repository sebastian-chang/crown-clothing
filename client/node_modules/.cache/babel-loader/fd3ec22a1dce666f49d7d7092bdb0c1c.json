{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport { fetchCollectionsStart } from './shop/shop-sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware]; // Sets logger for development but not live production site\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart); // Creating persisting storage\n\nconst persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","createSagaMiddleware","rootReducer","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACD;;AAED,MAAMW,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEAD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB,E,CAEA;;AACA,MAAMS,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B;AAEA,SAASA,KAAT,EAAgBE,SAAhB","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './root-reducer'\nimport { fetchCollectionsStart } from './shop/shop-sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst middlewares = [sagaMiddleware]\n\n// Sets logger for development but not live production site\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger)\n}\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(fetchCollectionsStart)\n\n// Creating persisting storage\nconst persistor = persistStore(store)\n\nexport { store, persistor }\n"]},"metadata":{},"sourceType":"module"}