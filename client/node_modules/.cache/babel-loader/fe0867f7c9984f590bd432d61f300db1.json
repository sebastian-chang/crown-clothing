{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user-types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user-actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\nexport function* onEmailSigninStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n    setUser({\n      email: '',\n      password: ''\n    });\n  } catch (error) {\n    put(emailSignInFailure(error));\n  }\n}","map":{"version":3,"sources":["/Users/schang/Documents/Learning/React Developer/crown-clothing/src/redux/user/user-sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas","onEmailSigninStart","EMAIL_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","setUser"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,gBAAjG;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA8B;AACnC,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB;AACA,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACI,mBAAmB,CAAC;AAC5Ba,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADW;AAE5B,SAAGF,YAAY,CAACG,IAAb;AAFyB,KAAD,CAApB,CAAT;AAID,GARD,CASA,OAAOC,KAAP,EAAc;AACZ,UAAMnB,GAAG,CAACK,mBAAmB,CAACc,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAiC;AACtC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUW,SAAV,GAAuB;AAC5B,QAAMrB,GAAG,CAAC,CACRC,IAAI,CAACkB,mBAAD,CADI,CAAD,CAAT;AAGD;AAED,OAAO,UAAUG,kBAAV,GAA+B;AACpC,QAAMxB,UAAU,CAACI,eAAe,CAACqB,mBAAjB,EAAsCC,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUA,eAAV,CAA2B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAV,CAA3B,EAAyD;AAC9D,MAAI;AACF,UAAM;AAAChB,MAAAA;AAAD,QAAS,MAAMJ,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAMd,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACM,kBAAkB,CAAC;AAC3BW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADU;AAE3B,SAAGF,YAAY,CAACG,IAAb;AAFwB,KAAD,CAAnB,CAAT;AAIAY,IAAAA,OAAO,CAAC;AACNH,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KAAD,CAAP;AAID,GAZD,CAaA,OAAOT,KAAP,EAAc;AACZnB,IAAAA,GAAG,CAACO,kBAAkB,CAACY,KAAD,CAAnB,CAAH;AACD;AACF","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport UserActionTypes from './user-types'\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user-actions'\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils'\n\nexport function* signInWithGoogle () {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data(),\n    }))\n  }\n  catch (error) {\n    yield put(googleSignInFailure(error))\n  }\n}\n\nexport function* onGoogleSignInStart () {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\nexport function* userSagas () {\n  yield all([\n    call(onGoogleSignInStart),\n  ])\n}\n\nexport function* onEmailSigninStart (){\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail)\n}\n\nexport function* signInWithEmail ({payload: {email, password}}) {\n  try {\n    const {user} = yield auth.signInWithEmailAndPassword(email, password)\n    const userRef = yield call(createUserProfileDocument, user)\n    const userSnapshot = yield userRef.get()\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data(),\n    }))\n    setUser({\n      email: '',\n      password: '',\n    })\n  }\n  catch (error) {\n    put(emailSignInFailure(error))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}